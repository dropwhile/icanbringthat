// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.22.0

package modelx

import (
	"time"

	"github.com/dropwhile/icbt/internal/util"
	"github.com/jackc/pgx/v5/pgtype"
)

type Earmark struct {
	ID           int32            `db:"id" json:"id"`
	RefID        EarmarkRefID     `db:"ref_id" json:"ref_id"`
	EventItemID  int32            `db:"event_item_id" json:"event_item_id"`
	UserID       int32            `db:"user_id" json:"user_id"`
	Note         string           `db:"note" json:"note"`
	Created      pgtype.Timestamp `db:"created" json:"created"`
	LastModified pgtype.Timestamp `db:"last_modified" json:"last_modified"`
}

type Event struct {
	ID            int32         `db:"id" json:"id"`
	RefID         EventRefID    `db:"ref_id" json:"ref_id"`
	UserID        int32         `db:"user_id" json:"user_id"`
	Name          string        `db:"name" json:"name"`
	Description   string        `db:"description" json:"description"`
	StartTime     time.Time     `db:"start_time" json:"start_time"`
	StartTimeTz   util.TimeZone `db:"start_time_tz" json:"start_time_tz"`
	Created       time.Time     `db:"created" json:"created"`
	LastModified  time.Time     `db:"last_modified" json:"last_modified"`
	ItemSortOrder []int32       `db:"item_sort_order" json:"item_sort_order"`
}

type EventItem struct {
	ID           int32          `db:"id" json:"id"`
	RefID        EventItemRefID `db:"ref_id" json:"ref_id"`
	EventID      int32          `db:"event_id" json:"event_id"`
	Description  string         `db:"description" json:"description"`
	Created      time.Time      `db:"created" json:"created"`
	LastModified time.Time      `db:"last_modified" json:"last_modified"`
}

type Favorite struct {
	ID      int32     `db:"id" json:"id"`
	UserID  int32     `db:"user_id" json:"user_id"`
	EventID int32     `db:"event_id" json:"event_id"`
	Created time.Time `db:"created" json:"created"`
}

type User struct {
	ID           int32     `db:"id" json:"id"`
	RefID        UserRefID `db:"ref_id" json:"ref_id"`
	Email        string    `db:"email" json:"email"`
	Name         string    `db:"name" json:"name"`
	PwHash       []byte    `db:"pwhash" json:"-"`
	Created      time.Time `db:"created" json:"created"`
	LastModified time.Time `db:"last_modified" json:"last_modified"`
	Verified     bool      `db:"verified" json:"verified"`
}

type UserPwReset struct {
	RefID   UserPwResetRefID `db:"ref_id" json:"ref_id"`
	UserID  int32            `db:"user_id" json:"user_id"`
	Created time.Time        `db:"created" json:"created"`
}

type UserVerify struct {
	RefID   VerifyRefID `db:"ref_id" json:"ref_id"`
	UserID  int32       `db:"user_id" json:"user_id"`
	Created time.Time   `db:"created" json:"created"`
}
