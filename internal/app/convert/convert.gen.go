// Code generated by github.com/reedom/convergen
// DO NOT EDIT.

// Copyright (c) 2024 Eli Janssen
// Use of this source code is governed by an MIT-style
// license that can be found in the LICENSE file.
package convert

import (
	"github.com/dropwhile/icanbringthat/internal/app/model"
	icbt "github.com/dropwhile/icanbringthat/rpc/icbt/rpc/v1"
)

func ToPbEvent(src *model.Event) (dst *icbt.Event) {
	dst = &icbt.Event{}
	dst.RefId = src.RefID.String()
	dst.Name = src.Name
	dst.Description = src.Description
	dst.When = TimeToTimestampTZ(src.When())
	dst.Archived = src.Archived
	dst.Created = TimeToTimestamp(src.Created)

	return
}

func ToPbEventItem(src *model.EventItem) (dst *icbt.EventItem) {
	dst = &icbt.EventItem{}
	dst.RefId = src.RefID.String()
	dst.Description = src.Description
	dst.Created = TimeToTimestamp(src.Created)

	return
}

func ToPbNotification(src *model.Notification) (dst *icbt.Notification) {
	dst = &icbt.Notification{}
	dst.RefId = src.RefID.String()
	dst.Message = src.Message
	dst.Created = TimeToTimestamp(src.Created)

	return
}
